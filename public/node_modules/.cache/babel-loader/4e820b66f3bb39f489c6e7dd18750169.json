{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/oem/Desktop/lesson14-cart-template/shop-react/src/containers/cartContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Cart from \"../components/cart\";\nimport * as types from \"../constants/Message\";\nimport CartItem from \"../components/cartItem\";\n\nclass CartContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showCartItem = cart => {\n      const result = types.MSG_CART_EMPTY;\n\n      if (cart.length > 0) {\n        result = cart.map((item, index) => {});\n      }\n\n      return result;\n    };\n  }\n\n  render() {\n    const {\n      cart\n    } = this.props;\n    console.log(cart);\n    return /*#__PURE__*/_jsxDEV(Cart, {\n      children: this.showCartItem(cart)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nCartContainer.protoTypes = {\n  cart: PropTypes.arrayOf(PropTypes.shape({\n    product: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      price: PropTypes.number.isRequired,\n      inventory: PropTypes.number.isRequired,\n      raiting: PropTypes.number.isRequired\n    }),\n    quantity: PropTypes.number.isRequired\n  })).isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.cart\n  };\n};\n\nexport default connect(mapStateToProps, null)(CartContainer);","map":{"version":3,"sources":["/home/oem/Desktop/lesson14-cart-template/shop-react/src/containers/cartContainer.js"],"names":["React","Component","connect","PropTypes","Cart","types","CartItem","CartContainer","showCartItem","cart","result","MSG_CART_EMPTY","length","map","item","index","render","props","console","log","protoTypes","arrayOf","shape","product","id","number","isRequired","name","string","image","description","price","inventory","raiting","quantity","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,SAMpCO,YANoC,GAMpBC,IAAD,IAAU;AACvB,YAAMC,MAAM,GAAGL,KAAK,CAACM,cAArB;;AAEA,UAAIF,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB;AACnBF,QAAAA,MAAM,GAAGD,IAAI,CAACI,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB,CAAE,CAA5B,CAAT;AACD;;AACD,aAAOL,MAAP;AACD,KAbmC;AAAA;;AACpCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAW,KAAKQ,KAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACA,wBAAO,QAAC,IAAD;AAAA,gBAAO,KAAKD,YAAL,CAAkBC,IAAlB;AAAP;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AALmC;;AAgBtCF,aAAa,CAACa,UAAd,GAA2B;AACzBX,EAAAA,IAAI,EAAEN,SAAS,CAACkB,OAAV,CACJlB,SAAS,CAACmB,KAAV,CAAgB;AACdC,IAAAA,OAAO,EAAEpB,SAAS,CAACmB,KAAV,CAAgB;AACvBE,MAAAA,EAAE,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,UADE;AAEvBC,MAAAA,IAAI,EAAExB,SAAS,CAACyB,MAAV,CAAiBF,UAFA;AAGvBG,MAAAA,KAAK,EAAE1B,SAAS,CAACyB,MAAV,CAAiBF,UAHD;AAIvBI,MAAAA,WAAW,EAAE3B,SAAS,CAACyB,MAAV,CAAiBF,UAJP;AAKvBK,MAAAA,KAAK,EAAE5B,SAAS,CAACsB,MAAV,CAAiBC,UALD;AAMvBM,MAAAA,SAAS,EAAE7B,SAAS,CAACsB,MAAV,CAAiBC,UANL;AAOvBO,MAAAA,OAAO,EAAE9B,SAAS,CAACsB,MAAV,CAAiBC;AAPH,KAAhB,CADK;AAUdQ,IAAAA,QAAQ,EAAE/B,SAAS,CAACsB,MAAV,CAAiBC;AAVb,GAAhB,CADI,EAaJA;AAduB,CAA3B;;AAiBA,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACL3B,IAAAA,IAAI,EAAE2B,KAAK,CAAC3B;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeP,OAAO,CAACiC,eAAD,EAAkB,IAAlB,CAAP,CAA+B5B,aAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Cart from \"../components/cart\";\nimport * as types from \"../constants/Message\";\nimport CartItem from \"../components/cartItem\";\n\nclass CartContainer extends Component {\n  render() {\n    const { cart } = this.props;\n    console.log(cart);\n    return <Cart>{this.showCartItem(cart)}</Cart>;\n  }\n  showCartItem = (cart) => {\n    const result = types.MSG_CART_EMPTY;\n\n    if (cart.length > 0) {\n      result = cart.map((item, index) => {});\n    }\n    return result;\n  };\n}\n\nCartContainer.protoTypes = {\n  cart: PropTypes.arrayOf(\n    PropTypes.shape({\n      product: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        price: PropTypes.number.isRequired,\n        inventory: PropTypes.number.isRequired,\n        raiting: PropTypes.number.isRequired,\n      }),\n      quantity: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cart: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps, null)(CartContainer);\n"]},"metadata":{},"sourceType":"module"}